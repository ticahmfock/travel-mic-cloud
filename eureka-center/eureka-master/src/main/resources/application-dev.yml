eureka:
  instance:
    hostname: master #服务注册中心实例的主机名
    prefer-ip-address: true #实例相较于instance-hostname是否优先使用IP
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}} #实例注册到服务中心的唯一ID
    appname: eureka-master #注册在的Eureka服务中的应用名称,默认赋值为spring.application.name
    lease-expiration-duration-in-seconds: 90 #服务中心删除此服务实例的等待时间(秒为单位),时间间隔为最后一次服务中心接受到的心跳时间
    lease-renewal-interval-in-seconds: 30 #实例给服务中心发送心跳的间隔时间，用于表明该服务实例可用
  client:
    register-with-eureka: true #实例是否在eureka服务器上注册自己的信息以供其他服务发现
    fetch-registry: true #客户端是否获取eureka服务器注册表上的注册信息
    service-url: #与Eureka注册服务中心的通信zone和url地址
      defaultZone: http://slave:8712/eureka/
    eureka-connection-idle-timeout-seconds: 30 #客户端连接Eureka服务端后的空闲等待时间，默认为30 秒
    eureka-server-connect-timeout-seconds: 5 #客户端连接eureka服务端的连接超时时间，默认为5秒
    eureka-server-read-timeout-seconds: 8 #客户端对服务端的读超时时长
    instance-info-replication-interval-seconds: 10 #间隔多长时间再次复制实例信息到eureka服务器，默认为30秒
    registry-fetch-interval-seconds: 30 #从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
  server:
    enable-self-preservation: false #服务端是否开启自我保护模式。建议关闭.开启自我保护机制开启后，实例不会删除，导致部分请求会连接不存在的实例
    eviction-interval-timer-in-ms: 60000 #开启清除无效服务的定时任务，时间间隔。默认1分钟
    disable-delta: false #过期数据，是否也提供给client
    log-identity-headers: true #eureka服务端是否记录client的身份header
    rate-limiter-burst-size: 10 #请求频率限制器
    rate-limiter-enabled: false #是否开启请求频率限制器
    response-cache-update-interval-ms: 30000 #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上默认30s
    response-cache-auto-expiration-in-seconds: 180 #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
